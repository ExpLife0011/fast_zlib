# perl highlighting

PRJ = test

LIBC       = shared
CONSOLE    = 1
OPTIMIZE   = speed
PDB        = 2				# keep enabled, executable is almost the same, except embedded link to pdb file

!if "$COMPILER" eq "VisualC"
	CPP_EXCEPT = 0										# used with WIN32_USE_SEH in Core.h
	OPTIONS = -GS- -GR- 								#?? VC8+
	DEFINES += _USING_V110_SDK71_						# avoid some warnings, perhaps affects something else
					# see http://tedwvc.wordpress.com/2014/01/01/how-to-target-xp-with-vc2012-or-vc2013-and-continue-to-use-the-windows-8-x-sdk/
					# it looks like VS2013 requires _USING_V120_SDK71_
!endif

!if "$COMPILER" eq "GnuC"
	# linux/cygwin + GCC
	STDLIBS   = stdc++ m GL 							# libm for math.h functions
	!if "$PLATFORM" ne "cygwin"
		STDLIBS += dl	# dlopen() and friends
	!endif

	LIBC      = shared
	OPTIONS   = -msse2									# enable SSE instructions
	OPTIONS   += -std=c++0x								# allow C++11 features
	OPTIONS   += -fno-strict-aliasing					# required for our uint_cast()-based FP hacks
	OPTIONS   += -fno-stack-protector					# this will remove GLIBC_2.4 dependency
	OPTIONS   += {
		# disable some warnings
		-Wno-invalid-offsetof							#?? this flag is for C++ only, not for C
	}
!endif

OBJDIR = obj/$PRJ-$PLATFORM
!message $OBJDIR

COMMON_FILES = {
	Test/test.cpp
	Test/Zlib/adler32.c
	Test/Zlib/compress.c
	Test/Zlib/crc32.c
	Test/Zlib/deflate.c
	Test/Zlib/gzio.c
	Test/Zlib/infback.c
	Test/Zlib/inffast.c
	Test/Zlib/inflate.c
	Test/Zlib/inftrees.c
	Test/Zlib/trees.c
	Test/Zlib/zutil.c
}

OBJDIR = obj/$PRJ-$PLATFORM
sources(TEST32) = $COMMON_FILES
target(executable, ${PRJ}-$PLATFORM, TEST32, TEST32)

#!if "$PLATFORM" eq "win32"

#OBJDIR = obj/$PRJ-${PLATFORM}x64
#sources(TEST64) = $COMMON_FILES
#target(executable, ${PRJ}64, TEST64, TEST64)

#!endif
